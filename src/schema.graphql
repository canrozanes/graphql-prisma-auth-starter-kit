### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

input LoginUserInput {
  email: String!
  password: String!
}

type MessagePayload {
  message: String!
}

type Mutation {
  activateUser(token: String!): MessagePayload
  forgotPassword(email: String!): MessagePayload
  login(data: LoginUserInput!): AuthPayload
  resetPassword(data: ResetPasswordInput!): MessagePayload
  signUp(data: SignUpUserInput!): MessagePayload
  updateUser(data: UpdateUserInput!): User
}

type Query {
  me: User
  users: [User!]!
}

input ResetPasswordInput {
  newPassword: String!
  token: String!
}

input SignUpUserInput {
  email: String!
  name: String!
  password: String!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
  updatedAt: DateTime!
}
